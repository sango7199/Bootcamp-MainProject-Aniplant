<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.user">
    <resultMap id="userResultMap" type="userVO">
        <result property="user_num" column="user_num"/>
        <result property="id" column="id"/>
        <result property="pwd" column="pwd"/>
        <result property="name" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="birth" column="birth"/>
        <result property="country_code" column="country_code"/>
        <result property="first_hp" column="first_hp"/>
        <result property="second_hp" column="second_hp"/>
        <result property="gender" column="gender"/>
        <result property="is_admin" column="is_admin"/>
        <result property="created_at" column="created_at"/>
        <result property="updated_user_num" column="updated_user_num"/>
        <result property="updated_at" column="updated_at"/>
        <result property="is_deleted" column="is_deleted"/>
        <result property="deleted_user_num" column="deleted_user_num"/>
        <result property="deleted_at" column="deleted_at"/>
        <result property="deleted_reason" column="deleted_reason"/>
        <result property="fail_count" column="fail_count"/>
        <result property="rank" column="rank"/>
    </resultMap>

    <insert id="registerUser" parameterType="userVO">
        INSERT INTO TB_USER (user_num, id, pwd, name, nickname, email, birth, country_code, first_hp, second_hp, gender, is_admin, created_at)
        VALUES (#{user_num}, #{id}, #{pwd}, #{name}, #{nickname}, #{email}, #{birth}, #{country_code}, #{first_hp}, #{second_hp}, #{gender}, #{is_admin}, #{created_at})
    </insert>

	<select id="checkIdDuplicate" resultType="int">
    	SELECT COUNT(*) FROM TB_USER WHERE ID = #{value}
	</select>

	<select id="checkNicknameDuplicate" resultType="int">
   		SELECT COUNT(*) FROM TB_USER WHERE Nickname = #{value}
	</select>

	<select id="getUserByUsername" parameterType="String" resultType="userVO">
        SELECT * FROM TB_USER WHERE ID = #{username}
    </select>
    
    <update id="updateUserWithPassword" parameterType="userVO">
    	UPDATE TB_USER
        SET
            email = #{email},
            nickname = #{nickname},
            birth= #{birth},
            first_hp = #{first_hp},
            second_hp = #{second_hp},
            updated_at = #{updated_at},
            pwd = #{pwd},
            updated_at = #{updated_at},
            updated_user_num = #{updated_user_num}
        WHERE user_num = #{user_num}
    </update>
	
	<update id="updateUserWithoutPassword" parameterType="userVO">
		UPDATE TB_USER
        SET
            email = #{email},
            nickname = #{nickname},
            birth= #{birth},
            country_code = #{country_code},
            first_hp = #{first_hp},
            second_hp = #{second_hp},
            updated_at = #{updated_at},
            updated_user_num = #{updated_user_num}
        WHERE user_num = #{user_num}
    </update>
    
    <update id="deleteUser" parameterType="userVO">
		UPDATE TB_USER
        SET
            deleted_at = #{deleted_at},
            deleted_reason = #{deleted_reason},
            deleted_user_num = #{deleted_user_num},
            is_deleted = #{is_deleted}
        WHERE user_num = #{user_num}
    </update>

	<update id="increaseLoginFailCount" parameterType="String">
		UPDATE TB_USER
		SET fail_count = fail_count + 1
		WHERE id = #{username};
	</update>
	
	<update id="resetLoginFailCount" parameterType="String">
		UPDATE TB_USER
		SET fail_count = 0
		WHERE id = #{username};
	</update>
	
	<!-- 관리자 영역 -->
	<select id="getAllUsers" resultType="userVO">
		SELECT * FROM TB_USER WHERE is_admin = 'User';
	</select>
</mapper>
